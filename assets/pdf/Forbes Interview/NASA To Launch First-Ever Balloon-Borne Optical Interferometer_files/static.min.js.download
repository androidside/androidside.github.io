!function(n){function e(c){if(t[c])return t[c].exports;var g=t[c]={i:c,l:!1,exports:{}};return n[c].call(g.exports,g,g.exports,e),g.l=!0,g.exports}var t={};e.m=n,e.c=t,e.i=function(n){return n},e.d=function(n,t,c){e.o(n,t)||Object.defineProperty(n,t,{configurable:!1,enumerable:!0,get:c})},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},e.p="",e(e.s=0)}([/*!****************!*\
  !*** ./tag.js ***!
  \****************/
function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar DEFAULT_DOMAIN = 'mydmp.exelator.com';\nvar DEFAULT_DATA_OBJECT = 'dataLayer';\n\nvar writeLog = function writeLog(level, message) {\n  if (debugEnabled()) if (level === 'error') console.error(level + ': ' + message);else {\n    console.log(level + ': ' + message);\n  }\n};\n\nvar debugEnabled = function debugEnabled() {\n  if (checkParam('dbg') && window.xl8_config['dbg'] == 'smtdn9') {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nvar getProto = function getProto() {\n  if (window.location.protocol === 'https:') {\n    writeLog('info', 'protocol is https');\n    return 'https:';\n  } else {\n    writeLog('info', 'protocol is http');\n    return 'http:';\n  }\n};\n\nvar checkParam = function checkParam(param) {\n  try {\n    if (window.xl8_config[param] != undefined) {\n      return true;\n    }\n  } catch (err) {\n    return false;\n  }\n};\n\nvar getDomain = function getDomain() {\n  if (checkParam('domain')) {\n    writeLog('info', 'domain is ' + window.xl8_config['domain']);\n    return window.xl8_config['domain'];\n  } else {\n    return DEFAULT_DOMAIN;\n  }\n};\n\nvar tokenizeDataObject = function tokenizeDataObject(obj, params, parent) {\n\n  for (var property in obj) {\n\n    // calculate property path\n    if (parent === undefined) {\n      var path = property.replace(/ /g, \"_\");\n    } else {\n      var path = parent + '-' + property.replace(/ /g, \"_\");\n    }\n\n    if (obj.hasOwnProperty(property)) {\n      if (_typeof(obj[property]) == 'object') {\n        if (Array.isArray(obj[property])) {\n          writeLog('info', 'found attribute ' + path + ' with value ' + obj[property].join());\n          params[path] = obj[property].join();\n        } else {\n          tokenizeDataObject(obj[property], params, path);\n        }\n      } else {\n        writeLog('info', 'found attribute ' + path + ' with value ' + obj[property]);\n        params[path] = obj[property];\n      }\n    }\n  }\n};\n\nvar getDataObject = function getDataObject() {\n  var objectName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'dataLayer';\n\n  try {\n    if (window[objectName] === undefined) throw new Error();\n    if (_typeof(window[objectName]) !== 'object') {\n      var dict = {};\n      dict[objectName] = window[objectName];\n      return dict;\n    }\n    return window[objectName];\n  } catch (err) {\n    writeLog('error', objectName + ' is undefined');\n  }\n};\n\nvar buildTagURL = function buildTagURL(p, g, params, proto, base) {\n\n  var tag_url = proto + '//' + base + '/load/?p=' + p + '&g=' + g + '&j=d';\n  tag_url += '&url=' + encodeURIComponent(window.location.href);\n  tag_url += '&rurl=' + encodeURIComponent(document.referrer);\n  for (var param in params) {\n    tag_url += '&' + param + '=' + encodeURIComponent(params[param]);\n  }\n  return tag_url;\n};\n\nvar fireTag = function fireTag(tag_url) {\n  var httpRequest = new XMLHttpRequest();\n  if (!httpRequest) {\n    writeLog('error', 'cannot create request, giving up');\n  }\n  httpRequest.withCredentials = true;\n  httpRequest.onreadystatechange = function () {\n    return handleResponse(httpRequest);\n  };\n  httpRequest.open('GET', tag_url);\n  httpRequest.send();\n  writeLog('info', 'firing tag: ' + tag_url);\n};\n\nvar handleResponse = function handleResponse(httpRequest) {\n  if (httpRequest.readyState == XMLHttpRequest.DONE) {\n    if (httpRequest.status !== 200) {\n      writeLog('error', 'There was a problem with the request.');\n    }\n    if (httpRequest.status === 200) {\n      writeLog('info', 'Tag fired successfully!');\n    }\n  }\n};\n\nvar getDataObjectList = function getDataObjectList() {\n  var dataObjects = [DEFAULT_DATA_OBJECT];\n  if (checkParam('dataObjects')) {\n    dataObjects = [].concat(_toConsumableArray(dataObjects), _toConsumableArray(window.xl8_config['dataObjects']));\n  }\n  return dataObjects;\n};\n\nvar getCssObjectList = function getCssObjectList() {\n\n  var cssObjects = {\n    classes: [],\n    ids: [],\n    elements: [],\n    complex: []\n  };\n  if (checkParam('cssObjects') && Array.isArray(window.xl8_config['cssObjects'])) {\n    window.xl8_config['cssObjects'].forEach(function (selector) {\n\n      if (typeof selector === 'string') {\n        if (selector.startsWith('.')) cssObjects.classes.push(selector.substring(1));else if (selector.startsWith('#')) cssObjects.ids.push(selector.substring(1));else cssObjects.elements.push(selector);\n      } else if ((typeof selector === 'undefined' ? 'undefined' : _typeof(selector)) === 'object' && selector.hasOwnProperty('selector')) {\n        if (selector.selector.startsWith('.')) cssObjects.complex.push(_extends({}, selector, { selector: selector.selector.substring(1), type: 'class' }));else if (selector.selector.startsWith('#')) cssObjects.complex.push(_extends({}, selector, { selector: selector.selector.substring(1), type: 'id' }));else cssObjects.complex.push(_extends({}, selector, { type: 'element' }));\n      }\n    });\n  }\n  return cssObjects;\n};\n\nvar buildAndFire = function buildAndFire(dataObjects, cssObjects) {\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n\n  var myParams = {};\n\n  dataObjects.forEach(function (object) {\n    tokenizeDataObject(getDataObject(object), myParams);\n  });\n\n  cssObjects.classes.forEach(function (cssClass) {\n    var selectorString = '';\n    [].concat(_toConsumableArray(document.getElementsByClassName(cssClass))).forEach(function (selector) {\n      selectorString += selector.innerText;\n    });\n    myParams[cssClass] = selectorString;\n    writeLog('info', 'found class ' + cssClass + ' with value ' + selectorString);\n  });\n\n  cssObjects.ids.forEach(function (cssId) {\n    var element = document.getElementById(cssId);\n    if (element !== null) {\n      myParams[cssId] = element.innerText;\n      writeLog('info', 'found id ' + cssId + ' with value ' + element.innerText);\n    }\n  });\n\n  cssObjects.elements.forEach(function (element) {\n    var selectorString = '';\n    [].concat(_toConsumableArray(document.getElementsByTagName(element))).forEach(function (selector) {\n      selectorString += selector.innerText;\n    });\n    myParams[element] = selectorString;\n    writeLog('info', 'found tag ' + element + ' with value ' + selectorString);\n  });\n\n  cssObjects.complex.forEach(function (complex) {\n\n    var elements = [];\n    if (complex.type === 'class') elements = [].concat(_toConsumableArray(document.getElementsByClassName(complex.selector)));else if (complex.type === 'id') elements = [document.getElementById(complex.selector)];else if (complex.type === 'element') elements = [].concat(_toConsumableArray(document.getElementsByTagName(complex.selector)));\n\n    elements.forEach(function (element) {\n\n      if (!complex.hasOwnProperty('key')) return;\n      complex.key.split('|').forEach(function (key) {\n        var myK = element.getAttribute(key);\n        if (myK === null) return;\n        myK = myK.replace(/[^a-zA-Z0-9]/g, '_');\n        if (complex.hasOwnProperty('value')) {\n          myParams[myK] = element.getAttribute(complex.value);\n        } else {\n          myParams[myK] = element.innerText;\n        }\n\n        writeLog('info', 'found tag ' + myK + ' with value ' + myParams[myK]);\n      });\n    });\n  });\n\n  fireTag(buildTagURL(window.xl8_config['p'], window.xl8_config['g'], _extends({}, myParams, data), getProto(), getDomain()));\n};\n\nvar runNielsenFlow = function runNielsenFlow() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n\n  writeLog('info', 'starting data delivery flow');\n\n  if (checkParam('p') && checkParam('g')) {\n\n    var dataObjects = getDataObjectList();\n    var cssObjects = getCssObjectList();\n    var clientData = data;\n\n    // always fire the tag at least once\n    buildAndFire(dataObjects, cssObjects, clientData);\n\n    // if an interval was set, re-fire the tag on that interval\n    if (checkParam('interval')) {\n      setInterval(function () {\n        return buildAndFire(dataObjects, cssObjects, clientData);\n      }, window.xl8_config['interval']);\n    }\n  }\n};\n\nwindow.sendToNielsen = function () {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return runNielsenFlow(data);\n};\n\nif (window.addEventListener) // W3C standard\n  {\n    window.addEventListener('load', runNielsenFlow, false);\n    writeLog('info', 'added onload listener');\n  } else if (window.attachEvent) // Microsoft\n  {\n    window.attachEvent('onload', runNielsenFlow);\n    writeLog('info', 'added onload listener');\n  }//# sourceMappingURL=data:application/json;charset=utf-8;base64,")}]);